buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.6"
    }
}

plugins {
    id "org.sonarqube" version "2.1-rc2"
    id "com.github.hierynomus.license" version "0.13.1"
    id "org.unbroken-dome.test-sets" version "1.2.0"
    id "com.gradle.plugin-publish" version "0.9.6"
}

apply plugin: "org.sonarqube"
apply plugin: "com.gradle.plugin-publish"

// --- (Sub-)Project config ---
allprojects {
    group = "de.qaware.cloud.deployer"

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "idea"
    apply plugin: "jacoco"
    apply plugin: "com.github.hierynomus.license"
    apply plugin: "org.unbroken-dome.test-sets"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile "commons-io:commons-io:2.5"
        compile "org.apache.commons:commons-lang3:3.4"
        compile "org.slf4j:slf4j-api:1.7.21"

        testCompile "junit:junit:4.11"
        testCompile "org.mockito:mockito-core:1.10.19"
        testCompile "org.slf4j:slf4j-simple:1.7.21"
        testCompile "com.github.tomakehurst:wiremock:2.1.12"
    }

    license {
        skipExistingHeaders = true
        header rootProject.file("LICENSE_HEADER")
        includes(["**/*.java"])
        mapping {
            java = "SLASHSTAR_STYLE"
        }
    }

    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }

    task testJar(type: Jar, dependsOn: testClasses) {
        baseName = "test-${project.archivesBaseName}"
        from sourceSets.test.output
    }

    configurations {
        tests
    }

    artifacts {
        tests testJar
    }

    testSets {
        integrationTest { dirName = "integration-test" }
    }

    sonarqube {
        properties {
            property "sonar.jacoco.itReportPath", "${buildDir}/jacoco/integrationTest.exec"
            property "sonar.jacoco.reportPath", "${buildDir}/jacoco/test.exec"
        }
    }
}

// --- Tasks ---
task wrapper(type: Wrapper) {
    gradleVersion = "3.1"
}

// Override some tasks to achieve jar creation in root project
def subProjects = [
        ":deployer-commons",
        ":deployer-dcos",
        ":deployer-kubernetes",
        ":deployer-marathon",
        ":deployer-plugin"
]
jar {
    dependsOn = subProjects.collect { it + ":build" }
    from files(subProjects.collect { project(it).sourceSets.main.output })
}
javadoc {
    source subProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(subProjects.collect { project(it).sourceSets.main.compileClasspath })
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from files(subProjects.collect { project(it).sourceSets.main.allSource })
}
publishPlugins.dependsOn sourcesJar

// --- Plugin config ---
sonarqube {
    properties {
        property "sonar.java.coveragePlugin", "jacoco"
    }
}

pluginBundle {
    website = project.websiteUrl
    vcsUrl = project.scmUrl

    plugins {
        deployerPlugin {
            id = "de.qaware.cloud.deployer"
            displayName = project.displayName
            description = project.description
            tags = ["cloud", "deployment", "marathon", "kubernetes"]
            version = project.version
        }
    }
}
